{"version":3,"file":"plans.bundle.js","mappings":"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","sources":["webpack://hotel-example-site/webpack/bootstrap","webpack://hotel-example-site/./src/lib/i18n.js","webpack://hotel-example-site/./src/lib/session.js","webpack://hotel-example-site/./src/lib/messages.js","webpack://hotel-example-site/./src/plans.js","webpack://hotel-example-site/./src/lib/formater.js"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const MESSAGES = {\n  'ja': require('../../data/ja/message.json'),\n  'en-US': require('../../data/en-US/message.json'),\n};\n\nconst PRESET_USERS = {\n  'ja': require('../../data/ja/user.json'),\n  'en-US': require('../../data/en-US/user.json'),\n};\n\nconst CURRENCY_FORMATTER = {\n  'ja': new Intl.NumberFormat('ja-JP', {style: 'currency', currency: 'JPY', currencyDisplay: 'name'}),\n  'en-US': new Intl.NumberFormat('en-US', {style: 'currency', currency: 'USD', currencyDisplay: 'symbol'}),\n};\n\nconst DATE_LONG_FORMATTER = {\n  'ja': new Intl.DateTimeFormat('ja-JP', {year: 'numeric', month: 'long', day: 'numeric'}),\n  'en-US': new Intl.DateTimeFormat('en-US', {year: 'numeric', month: 'long', day: 'numeric'}),\n};\n\nconst DATE_SHORT_FORMATTER = {\n  'ja': function(date) {\n    return date.getFullYear() + '/' + pad(date.getMonth() + 1) + '/' + pad(date.getDate());\n  },\n  'en-US': function(date) {\n    return pad(date.getMonth() + 1) + '/' + pad(date.getDate()) + '/' + date.getFullYear();\n  },\n};\n\nconst DATE_SHORT_PARSER = {\n  'ja': function(dateString) {\n    const arr = dateString.match(/^(\\d{4})\\/(\\d{1,2})\\/(\\d{1,2})$/);\n    if (!arr || arr.length !== 4) {\n      return null;\n    }\n    const year = parseInt(arr[1], 10);\n    const month = parseInt(arr[2], 10);\n    const date = parseInt(arr[3], 10);\n    return new Date(year, month - 1, date);\n  },\n  'en-US': function(dateString) {\n    const arr = dateString.match(/^(\\d{1,2})\\/(\\d{1,2})\\/(\\d{4})$/);\n    if (!arr || arr.length !== 4) {\n      return null;\n    }\n    const year = parseInt(arr[3], 10);\n    const month = parseInt(arr[1], 10);\n    const date = parseInt(arr[2], 10);\n    return new Date(year, month - 1, date);\n  },\n};\n\nconst ADDITIONAL_PLAN_PRICE = {\n  'ja': 1000,\n  'en-US': 10.00,\n};\n\n/**\n * Get current page locale\n * @returns {string} locale\n */\nexport function getLocale() {\n  return $('html').attr('lang');\n}\n\n/**\n * Get localized messages\n * @param {string} locale \n * @returns {object}\n */\nexport function getMessages(locale) {\n  locale = (typeof locale !== 'undefined') ?  locale : getLocale();\n  return MESSAGES[locale];\n}\n\n/**\n * Get preset users\n * @param {string} locale \n * @returns {object}\n */\nexport function getPresetUsers(locale) {\n  locale = (typeof locale !== 'undefined') ?  locale : getLocale();\n  return PRESET_USERS[locale];\n}\n\n/**\n * Get currency formater\n * @param {string} locale \n * @returns {Intl.NumberFormat}\n */\nexport function getCurrencyFormatter(locale) {\n  locale = (typeof locale !== 'undefined') ?  locale : getLocale();\n  return CURRENCY_FORMATTER[locale];\n}\n\n/**\n * Get date long formatter\n * @param {string} locale \n * @returns {Intl.DateTimeFormat}\n */\nexport function getDateLongFormatter(locale) {\n  locale = (typeof locale !== 'undefined') ?  locale : getLocale();\n  return DATE_LONG_FORMATTER[locale];\n}\n\n/**\n * Get date short fomatter\n * @param {string} locale \n * @returns {Intl.DateTimeFormat}\n */\nexport function getDateShortFormatter(locale) {\n  locale = (typeof locale !== 'undefined') ?  locale : getLocale();\n  return DATE_SHORT_FORMATTER[locale];\n}\n\n/**\n * Get date short parser\n * @param {string} locale \n * @returns {Function}\n */\nexport function getDateShortParser(locale) {\n  locale = (typeof locale !== 'undefined') ?  locale : getLocale();\n  return DATE_SHORT_PARSER[locale];\n}\n\n/**\n * Get additional plan price\n * @param {string} locale\n * @returns {number}\n */\nexport function getAdditionalPlanPrice(locale) {\n  locale = (typeof locale !== 'undefined') ?  locale : getLocale();\n  return ADDITIONAL_PLAN_PRICE[locale];\n}\n\n/**\n * Pad zero\n * @param {number} number\n * @return {string} 0X string\n */\nfunction pad(number) {\n  if (number < 10) {\n    return '0' + number;\n  }\n  return '' + number;\n}\n","import {getPresetUsers} from './i18n.js';\n\n/**\n * Get user data\n * @param {string} email\n * @return {object} user data\n */\nexport function getUser(email) {\n  const presetUsers = getPresetUsers();\n  let user = null;\n  for (let i = 0; i < presetUsers.length; i++) {\n    if (presetUsers[i].email === email) {\n      user = presetUsers[i];\n      break;\n    }\n  }\n  if (user) {\n    user.preset = true;\n    return user;\n  }\n  user = localStorage.getItem(email);\n  if (user) {\n    return JSON.parse(user);\n  } else {\n    return null;\n  }\n}\n\n/**\n * check valid user\n * @param {string} email\n * @param {string} password\n * @return {boolean} return true if valid user\n */\nexport function isValidUser(email, password) {\n  const user = getUser(email);\n  return (user && user.password === password);\n}\n\n/**\n * Get session user\n * @return {string} session user email\n */\nexport function getSessionUser() {\n  return document.cookie.replace(/(?:(?:^|.*;\\s*)session\\s*\\=\\s*([^;]*).*$)|^.*$/, '$1');\n}\n\n/**\n * login\n * @param {string} email\n */\nexport function login(email) {\n  document.cookie = 'session=' + email + '; max-age=630720000';\n}\n\n/**\n * logout\n */\nexport function logout() {\n  document.cookie = 'session=; max-age=0';\n}\n\n/**\n * Generate transaction ID\n * @return {string}\n */\nexport function genTransactionId() {\n  return '' + (Math.floor(Math.random() * (10000000000 - 1000000000)) + 1000000000);\n}\n\n/**\n * Get transaction ID from session\n * @return {string}\n */\nexport function getTransactionId() {\n  return document.cookie.replace(/(?:(?:^|.*;\\s*)transaction\\s*\\=\\s*([^;]*).*$)|^.*$/, '$1');\n}\n\n/**\n * delete transaction ID\n */\nexport function deleteTransactionId() {\n  document.cookie = 'transaction=; max-age=0';\n}\n\n/**\n * Redirect to top page\n */\nexport function redirectToTop() {\n  let path;\n  if (location.pathname.split('/').length === 2) {\n    path = location.pathname.replace(/(\\/.+\\.html)/, '/index.html');\n  } else {\n    path = location.pathname.replace(/(\\/.+)(\\/.+\\.html)/, '$1/index.html');\n  }\n  location.assign(location.origin + path);\n}\n\n/**\n * Set login status to navbar\n */\nexport function setLoginNavbar() {\n  $('#signup-holder').removeClass('d-block').addClass('d-none');\n  $('#login-holder').removeClass('d-block').addClass('d-none');\n  $('#mypage-holder').removeClass('d-none').addClass('d-block');\n  $('#logout-holder').removeClass('d-none').addClass('d-block');\n  $('#logout-form').submit(function() {\n    logout();\n  });\n}\n\n/**\n * Check display by user\n * @param {object} plan\n * @param {object} user\n * @return {boolean} true if can display\n */\nexport function canDisplayPlan(plan, user) {\n  if (!plan.only) {\n    return true;\n  }\n  if (!user) {\n    return false;\n  }\n  if (plan.only === 'member') {\n    return true;\n  } else if (plan.only === 'premium') {\n    return (user.rank === 'premium');\n  }\n}\n","import {getMessages} from './i18n.js';\n\n/**\n * Get translated message\n * @param {string} key\n * @param {...string} params\n * @return {string} \n */\nexport function t() {\n  const params = Array.prototype.slice.call(arguments);\n  const key = params.shift();\n  let messageStore = getMessages();\n  const keys = key.split('.');\n  let message;\n  for (let i = 0; i < keys.length; i++) {\n    message = messageStore[keys[i]];\n    if (typeof message === 'string') {\n      break;\n    } else {\n      messageStore = messageStore[keys[i]];\n    }\n  }\n  for (let i = 0; i < params.length; i++) {\n    message = message.replace('{}', params[i]);\n  }\n  return message;\n}\n","import {formatCurrency} from './lib/formater.js';\nimport {getLocale} from './lib/i18n.js';\nimport {getSessionUser, getUser, setLoginNavbar, canDisplayPlan} from './lib/session.js';\nimport {t} from './lib/messages.js';\n\n$(function() {\n  // Check login\n  const session = getSessionUser();\n  if (session) {\n    setLoginNavbar();\n  }\n  const user = getUser(session);\n\n  // fetch plan data\n  const url = location.origin + '/data/' + getLocale() + '/plan_data.json?' + Date.now();\n  $.getJSON(url).done(function(data) {\n    let planHtml = '';\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].id !== 0 && canDisplayPlan(data[i], user)) {\n        planHtml += genPlanHtml(data[i]);\n      }\n    }\n    $('#plan-list').html(planHtml);\n  });\n});\n\n/**\n * Generate plan HTML\n * @param {onject} plan plan data\n * @return {string} plan HTML\n */\nfunction genPlanHtml(plan) {\n  let header = '';\n  if (plan.only === 'premium') {\n    header = '<div class=\"card-header\">' + t('plans.premiumOnly') + '</div>';\n  } else if (plan.only === 'member') {\n    header = '<div class=\"card-header\">' + t('plans.memberOnly') + '</div>';\n  }\n  return '<div class=\"col-12 col-md-6 col-lg-4\">' +\n'<div class=\"card text-center shadow-sm mb-3\">' + \n  header + \n  '<div class=\"card-body\">' +\n    '<h5 class=\"card-title\">' + plan.name + '</h5>' +\n      '<ul class=\"list-unstyled\">' +\n        '<li>' + t('plans.oneAdult', formatCurrency(plan.roomBill)) + '</li>' +\n        '<li>' + t('plans.minHeadCount', plan.minHeadCount) + '</li>' +\n        '<li>' + plan.room + '</li>' +\n      '</ul>' +\n      '<a href=\"./reserve.html?plan-id=' + plan.id + '\" class=\"btn btn-primary\" target=\"_blank\" rel=\"opener\">' + t('plans.reserveLink') + '</a>' +\n    '</div>' +\n  '</div>' +\n'</div>';\n}\n","import {getCurrencyFormatter, getDateLongFormatter, getDateShortFormatter, getDateShortParser} from './i18n.js';\n\n/**\n * Format currency\n * @param {number} num\n * @return {string} formated text\n */\nexport function formatCurrency(num) {\n  return getCurrencyFormatter().format(num);\n}\n\n/**\n * Format date (long format)\n * @param {Date} date\n * @return {string} formated text\n */\nexport function formatDateLong(date) {\n  return getDateLongFormatter().format(date);\n}\n\n/**\n * Format date (short format)\n * @param {Date} date\n * @return {string} formated text\n */\nexport function formatDateShort(date) {\n  const formatter = getDateShortFormatter();\n  return formatter(date);\n}\n\n/**\n * Parse date\n * @param {string} dateString\n * @return {Date} date\n */\nexport function parseDate(dateString) {\n  const parser = getDateShortParser();\n  return parser(dateString);\n}\n\n/**\n * Pad zero\n * @param {number} number\n * @return {string} 0X string\n */\nfunction pad(number) {\n  if (number < 10) {\n    return '0' + number;\n  }\n  return '' + number;\n}\n\n/**\n * Format date to ISO-format\n * @param {Date} date \n * @returns {string} string\n */\nexport function formatDateISO(date) {\n  return date.getFullYear() + '-' + pad(date.getMonth() + 1) + '-' + pad(date.getDate());\n}\n\n/**\n * Parse date from ISO-format\n * @param {string} dateString\n * @return {Date} date\n */\nexport function parseDateISO(dateString) {\n  const arr = dateString.match(/^(\\d{4})-(\\d{1,2})-(\\d{1,2})$/);\n  if (!arr || arr.length !== 4) {\n    return null;\n  }\n  const year = parseInt(arr[1], 10);\n  const month = parseInt(arr[2], 10);\n  const date = parseInt(arr[3], 10);\n  return new Date(year, month - 1, date);\n}\n"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","MESSAGES","PRESET_USERS","CURRENCY_FORMATTER","Intl","NumberFormat","style","currency","currencyDisplay","getLocale","$","attr","canDisplayPlan","plan","user","only","rank","t","params","Array","prototype","slice","call","arguments","key","shift","messageStore","locale","keys","split","message","i","length","replace","genPlanHtml","header","name","num","roomBill","format","minHeadCount","room","id","DateTimeFormat","year","month","day","session","document","cookie","removeClass","addClass","submit","email","presetUsers","preset","localStorage","getItem","JSON","parse","getUser","url","location","origin","Date","now","getJSON","done","data","planHtml","html"],"sourceRoot":""}